@model IEnumerable<Take02.ViewModels.RecipeViewModel>

@{
    ViewData["Title"] = "Recipes by Library";
    var showIngredients = Model.Count() > 0 && Model.FirstOrDefault().ShowIngredients;
}

<h2>Recipes by Library</h2>

<p>
    <a asp-action="Create">Create New</a> |
    @Html.ActionLink("Show/Hide Ingredients", "Library", "Recipes", new { ShowIngredients = !showIngredients }, null)
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                MixType
            </th>
            @if (showIngredients)
            {
                <th>
                    Ingredients
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.Instructions)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MixTypeName)
                </td>
                @if (item.ShowIngredients)
                {
                    <td>
                        @foreach (var ingredientVM in item.IngredientViewModels)
                        {
                            @Html.DisplayFor(modelItem => ingredientVM.IngredientText)
                            <br />
                        }
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Instructions)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

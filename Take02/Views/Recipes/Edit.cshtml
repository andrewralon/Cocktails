@model Take02.ViewModels.RecipeViewModel

@{
    ViewData["Title"] = "Edit";
    var isFirstIngredient = true;
}

<h2>Edit</h2>

<h4>Recipe</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label class="control-label">Library</label>
                @Html.DropDownListFor(m => m.LibraryId, Model.LibrarySelectListItems, null, new { @class = "form-control" })
                <span asp-validation-for="LibraryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">MixType</label>
                @Html.DropDownListFor(m => m.MixTypeId, Model.MixTypeSelectListItems, null, new { @class = "form-control" })
                <span asp-validation-for="MixTypeId" class="text-danger"></span>
            </div>
            <div id="newIngredient" class="form-group">
                <hr />
                <label class="control-label">Ingredients</label>
                <br />
                <br />
                <div class="ingredientsContainer">
                    @foreach (var ingredientVM in Model.IngredientViewModels)
                    {
                        ingredientVM.IsFirstIngredient = isFirstIngredient;
                        ingredientVM.ComponentSelectListItems = Model.ComponentSelectListItems;
                        ingredientVM.UnitSelectListItems = Model.UnitSelectListItems;
                        <!-- This outer element is necessary because the RenderPartial outputs another hidden input -->
                        <div class="ingredientWrapper">
                            @{
                                Html.RenderPartial("_AddEditIngredientPartial", ingredientVM);
                                isFirstIngredient = false;
                            }
                        </div>
                    }
                </div>
            </div>
            <div class="form-group">
                <input type="button" id="addIngredient" name="addIngredient" value="Add Ingredient" onclick="AddNewIngredient('@Model.Id')" /> 
                <hr />
            </div>
            <div class="form-group">
                <label asp-for="Instructions" class="control-label"></label>
                <input asp-for="Instructions" class="form-control" />
                <span asp-validation-for="Instructions" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Source" class="control-label"></label>
                <input asp-for="Source" class="form-control" />
                <span asp-validation-for="Source" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
